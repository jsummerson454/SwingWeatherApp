package group18.screens;

import javax.swing.*;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class SettingsView {
    public JPanel main;

    public JButton backButton;

    public JSlider coldSlider;
    public JSlider hotSlider;

    public JRadioButton onRadioButton;
    public JRadioButton offRadioButton;
    public JRadioButton celciusRadioButton;
    public JRadioButton fahrenheitRadioButton;

    public JButton selectLocationButton;

    public JLabel belowLabel;
    public JLabel aboveLabel;

    private JPanel mainPanel;

    private JPanel topPanel;
    private JPanel unitHolderPanel;
    private JPanel unitLayoutPanel;
    private JLabel UnitLabel;
    private JPanel notificationHolderPanel;
    private JPanel notificationLayoutPanel;
    private JLabel notificationLabel;
    private JLabel coldLabel;
    private JLabel hotLabel;
    private JPanel locationHolderPanel;
    private JPanel locationLayoutPanel;
    private JLabel locationLabel;
    private JLabel selectionLabel;
    private JLabel titleLabel;
    private JLabel unitIcon;
    private JLabel notificationIcon;

    private void createUIComponents() {
    }

    public SettingsView() {
        Dimension fixedSize = new Dimension(100, 100);
        belowLabel.setPreferredSize(fixedSize);
        aboveLabel.setPreferredSize(fixedSize);
        unitIcon.setIcon(new ImageIcon("resources/UnitIcon.png"));
        notificationIcon.setIcon(new ImageIcon("resources/NotificationIcon.png"));


    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        main = new JPanel();
        main.setLayout(new BorderLayout(0, 0));
        Font mainFont = this.$$$getFont$$$(null, -1, 28, main.getFont());
        if (mainFont != null) main.setFont(mainFont);
        topPanel = new JPanel();
        topPanel.setLayout(new BorderLayout(0, 0));
        topPanel.setBackground(new Color(-8928782));
        main.add(topPanel, BorderLayout.NORTH);
        topPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.black), null));
        titleLabel = new JLabel();
        Font titleLabelFont = this.$$$getFont$$$(null, -1, 28, titleLabel.getFont());
        if (titleLabelFont != null) titleLabel.setFont(titleLabelFont);
        titleLabel.setText("Settings");
        topPanel.add(titleLabel, BorderLayout.WEST);
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridBagLayout());
        mainPanel.setBackground(new Color(-4395790));
        main.add(mainPanel, BorderLayout.CENTER);
        unitHolderPanel = new JPanel();
        unitHolderPanel.setLayout(new BorderLayout(0, 0));
        unitHolderPanel.setBackground(new Color(-8928782));
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(unitHolderPanel, gbc);
        unitLayoutPanel = new JPanel();
        unitLayoutPanel.setLayout(new GridBagLayout());
        unitLayoutPanel.setBackground(new Color(-8928782));
        unitHolderPanel.add(unitLayoutPanel, BorderLayout.CENTER);
        unitLayoutPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.black), null));
        UnitLabel = new JLabel();
        UnitLabel.setText("Units");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 0.125;
        gbc.anchor = GridBagConstraints.WEST;
        unitLayoutPanel.add(UnitLabel, gbc);
        celciusRadioButton = new JRadioButton();
        celciusRadioButton.setBackground(new Color(-8928782));
        celciusRadioButton.setText("℃");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.weightx = 0.125;
        gbc.anchor = GridBagConstraints.WEST;
        unitLayoutPanel.add(celciusRadioButton, gbc);
        fahrenheitRadioButton = new JRadioButton();
        fahrenheitRadioButton.setBackground(new Color(-8928782));
        fahrenheitRadioButton.setText("℉");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.weightx = 0.125;
        gbc.anchor = GridBagConstraints.WEST;
        unitLayoutPanel.add(fahrenheitRadioButton, gbc);
        unitIcon = new JLabel();
        unitIcon.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.gridheight = 3;
        gbc.weightx = 0.25;
        gbc.anchor = GridBagConstraints.EAST;
        unitLayoutPanel.add(unitIcon, gbc);
        notificationHolderPanel = new JPanel();
        notificationHolderPanel.setLayout(new BorderLayout(0, 0));
        notificationHolderPanel.setBackground(new Color(-8928782));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(notificationHolderPanel, gbc);
        notificationLayoutPanel = new JPanel();
        notificationLayoutPanel.setLayout(new GridBagLayout());
        notificationLayoutPanel.setBackground(new Color(-8928782));
        notificationHolderPanel.add(notificationLayoutPanel, BorderLayout.CENTER);
        notificationLayoutPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.black), null));
        notificationLabel = new JLabel();
        notificationLabel.setText("Notifications");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 0.125;
        gbc.anchor = GridBagConstraints.WEST;
        notificationLayoutPanel.add(notificationLabel, gbc);
        onRadioButton = new JRadioButton();
        onRadioButton.setBackground(new Color(-8928782));
        onRadioButton.setText("On");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.weightx = 0.125;
        gbc.anchor = GridBagConstraints.WEST;
        notificationLayoutPanel.add(onRadioButton, gbc);
        offRadioButton = new JRadioButton();
        offRadioButton.setBackground(new Color(-8928782));
        offRadioButton.setText("Off");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.weightx = 0.125;
        gbc.anchor = GridBagConstraints.WEST;
        notificationLayoutPanel.add(offRadioButton, gbc);
        coldLabel = new JLabel();
        coldLabel.setText("What's Cold?");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        notificationLayoutPanel.add(coldLabel, gbc);
        coldSlider = new JSlider();
        coldSlider.setBackground(new Color(-8928782));
        coldSlider.setForeground(new Color(-16735246));
        coldSlider.setInverted(false);
        coldSlider.setMaximum(20);
        coldSlider.setMinorTickSpacing(0);
        coldSlider.setPaintLabels(false);
        coldSlider.setPaintTicks(false);
        coldSlider.setPaintTrack(true);
        coldSlider.setSnapToTicks(true);
        coldSlider.setValue(10);
        coldSlider.setValueIsAdjusting(false);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.gridwidth = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        notificationLayoutPanel.add(coldSlider, gbc);
        hotLabel = new JLabel();
        hotLabel.setText("What's Hot?");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.anchor = GridBagConstraints.WEST;
        notificationLayoutPanel.add(hotLabel, gbc);
        hotSlider = new JSlider();
        hotSlider.setBackground(new Color(-8928782));
        hotSlider.setEnabled(true);
        hotSlider.setForeground(new Color(-917484));
        hotSlider.setMaximum(10);
        hotSlider.setPaintTrack(true);
        hotSlider.setSnapToTicks(true);
        hotSlider.setValue(5);
        hotSlider.setValueIsAdjusting(false);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 6;
        gbc.gridwidth = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        notificationLayoutPanel.add(hotSlider, gbc);
        belowLabel = new JLabel();
        Font belowLabelFont = this.$$$getFont$$$(null, -1, -1, belowLabel.getFont());
        if (belowLabelFont != null) belowLabel.setFont(belowLabelFont);
        belowLabel.setText("Below T*C");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 3;
        gbc.gridheight = 2;
        notificationLayoutPanel.add(belowLabel, gbc);
        aboveLabel = new JLabel();
        Font aboveLabelFont = this.$$$getFont$$$(null, -1, -1, aboveLabel.getFont());
        if (aboveLabelFont != null) aboveLabel.setFont(aboveLabelFont);
        aboveLabel.setText("Above T*C");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 5;
        gbc.gridheight = 2;
        notificationLayoutPanel.add(aboveLabel, gbc);
        notificationIcon = new JLabel();
        notificationIcon.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.gridheight = 3;
        gbc.anchor = GridBagConstraints.EAST;
        notificationLayoutPanel.add(notificationIcon, gbc);
        locationHolderPanel = new JPanel();
        locationHolderPanel.setLayout(new BorderLayout(0, 0));
        locationHolderPanel.setBackground(new Color(-8928782));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(locationHolderPanel, gbc);
        locationLayoutPanel = new JPanel();
        locationLayoutPanel.setLayout(new GridBagLayout());
        locationLayoutPanel.setBackground(new Color(-8928782));
        locationHolderPanel.add(locationLayoutPanel, BorderLayout.CENTER);
        locationLayoutPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-16777216)), null));
        locationLabel = new JLabel();
        locationLabel.setText("Location");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 0.125;
        gbc.anchor = GridBagConstraints.WEST;
        locationLayoutPanel.add(locationLabel, gbc);
        selectionLabel = new JLabel();
        selectionLabel.setText("What is selected");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        locationLayoutPanel.add(selectionLabel, gbc);
        selectLocationButton = new JButton();
        selectLocationButton.setBackground(new Color(-1842305));
        selectLocationButton.setText("Select");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.gridheight = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        locationLayoutPanel.add(selectLocationButton, gbc);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel1.setBackground(new Color(-8928782));
        main.add(panel1, BorderLayout.SOUTH);
        panel1.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-16777216)), null));
        backButton = new JButton();
        backButton.setBackground(new Color(-1842305));
        backButton.setText("Back");
        panel1.add(backButton);
        ButtonGroup buttonGroup;
        buttonGroup = new ButtonGroup();
        buttonGroup.add(onRadioButton);
        buttonGroup.add(offRadioButton);
        buttonGroup = new ButtonGroup();
        buttonGroup.add(celciusRadioButton);
        buttonGroup.add(fahrenheitRadioButton);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return main;
    }
}
